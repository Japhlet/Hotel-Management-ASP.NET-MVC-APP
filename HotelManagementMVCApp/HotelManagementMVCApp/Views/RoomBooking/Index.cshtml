@model HotelManagementMVCApp.ViewModel.RoomBookingVM

@{
    ViewBag.Title = "Index";
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

<script type="text/javascript">
    $(document).ready(function () {
        DateTimePicker();
        $("#btnSave").click(function () {
            if (!$("#formBookingRoom").valid()) {
                return;
            }
            SaveCustomerBookingRoomData();
        });
    });

    function DateTimePicker() {
        $(".datepicker").datepicker({
            dateFormat: 'dd-M-yy',
            changeMonth: true,
            changeYear: true,
            showOn: 'button',
            sideBySide: true,
            controlType: 'select',
            buttonText: '<span class="glyphicon glyphicon-calendar"></span>',
            minDate: new Date()
        });

        $("#txtBookingFrom").change(function () {
            var date2 = $("#txtBookingFrom").datepicker('getDate', '+1d');
            date2.setDate(date2.getDate() + 1);
            $("#txtBookingTo").datepicker('option', 'minDate', date2);
            $("#txtBookingTo").datepicker('setDate', date2);
        });
    }

    function SaveCustomerBookingRoomData() {
        @*var formData = new FormData();
        formData.append("customerId", $("#ddRoomCustomer").val());
        formData.append("bookingFrom", $("#txtBookingFrom").val());
        formData.append("bookingTo", $("#txtBookingTo").val());
        formData.append("assignRoomId", $("#ddAssignRoom").val());
        formData.append("numberOfOccupants", $("#txtNumberOfOccupants").val());
        formData.append("totalAmount", $("#txtTotalAmount").val()); *@

        var roomBookingVM = {};
        roomBookingVM.customerId = $("#ddRoomCustomer").val();
        roomBookingVM.bookingFrom = $("#txtBookingFrom").val();
        roomBookingVM.bookingTo = $("#txtBookingTo").val();
        roomBookingVM.assignRoomId = $("#ddAssignRoom").val();
        roomBookingVM.numberOfOccupants = $("#txtNumberOfOccupants").val();
        roomBookingVM.totalAmount = $("#txtTotalAmount").val();

        $.ajax({
            async: true,
            type: "POST",
            dataType: "JSON",
            contentType: "application/json; charset=utf-8",
            url: "/RoomBooking/Index",
            data: JSON.stringify(roomBookingVM),
            success: function (data) {
                if (data.success == true) {
                    alert(data.message);
                    ResetRoomBookingInformation();
                    //LoadRoomDetails();
                }
            },
            error: function () {
                alert("There is an error processing your request. Please try after some time");
            }
        });
    }

    function ResetRoomBookingInformation() {
        $("#ddRoomCustomer").val(1);        
        $("#ddAssignRoom").val(1);
        $("#txtNumberOfOccupants").val('');
        $("#ddRoomCustomer").focus();
        $("#txtBookingId").val(0);
        $("#btnSave").text("Update");
    }
</script>

<div style="margin-top:10px">
    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#divAddRoomBooking" data-backdrop="static" data-keyboard="false">Book Room</button>
</div>

<div id="divAddRoomBooking" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">New Room Booking</h4>
                <div class="modal-body">
                    <form id="formBookingRoom">
                        <div class="container">
                            <div class="row">
                                @Html.HiddenFor(m => m.bookingId, new { @id = "txtRoomBookingId" })
                                <div class="form-group col-md-2">
                                    @Html.LabelFor(m => m.customerId)
                                    @Html.DropDownListFor(m => m.customerId, Model.ListOfCustomers, new { @class = "form-control", id = "ddRoomCustomer" })
                                    @Html.ValidationMessageFor(m => m.customerId, null, new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-2">
                                    @Html.LabelFor(m => m.bookingFrom)
                                    @Html.EditorFor(m => m.bookingFrom, new { htmlAttributes = new { @readonly = "true", Value = Model.bookingFrom.ToString("dd-MMM-yyyy"), @class = "form-control datepicker", id = "txtBookingFrom" } })
                                    @Html.ValidationMessageFor(m => m.bookingFrom, null, new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group col-md-2">
                                    @Html.LabelFor(m => m.bookingTo)
                                    @Html.EditorFor(m => m.bookingTo, new { htmlAttributes = new { @readonly = "true", Value = Model.bookingTo.ToString("dd-MMM-yyyy"), @class = "form-control datepicker", id = "txtBookingTo" } })
                                    @Html.ValidationMessageFor(m => m.bookingTo, null, new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-2">
                                    @Html.LabelFor(m => m.assignRoomId)
                                    @Html.DropDownListFor(m => m.assignRoomId, Model.ListOfAssignedRooms, new { @class = "form-control", id = "ddAssignRoom" })
                                    @Html.ValidationMessageFor(m => m.assignRoomId, null, new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group col-md-2">
                                    @Html.LabelFor(m => m.numberOfOccupants)
                                    @Html.TextBoxFor(m => m.numberOfOccupants, new { @class = "form-control", id = "txtNumberOfOccupants" })
                                    @Html.ValidationMessageFor(m => m.numberOfOccupants, null, new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-2">
                                    @Html.LabelFor(m => m.totalAmount)
                                    @Html.TextBoxFor(m => m.totalAmount, new { @class = "form-control", id = "txtTotalAmount" })
                                    @Html.ValidationMessageFor(m => m.totalAmount, null, new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </form>
                </div>

                <div class="modal-footer">
                    <button id="btnSave" type="button" class="btn btn-success">Save</button> &nbsp;
                    <button type="button" data-dismiss="modal" class="btn btn-danger">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div style="margin-top:10px">

</div>
<div id="divLoadBookingRoomDetails">

</div>

